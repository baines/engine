OS := emscripten
dirs := . renderer
output := ../engine.bc
builddir := ../build/$(OS)
headers := $(foreach dir,$(dirs),$(wildcard ../include/$(dir)/*.h))
sources := $(foreach dir,$(dirs),$(wildcard $(dir)/*.cpp))
objects := $(patsubst %.cpp,$(builddir)/%.o,$(sources))
includes := $(foreach dir,$(dirs),-I../include/$(dir))\
 -I../build/emscripten-deps\
 -I../build/emscripten-deps/boost/include\
 -I../build/emscripten-deps/ft2/include\
 -I../build/emscripten-deps/glm\
 -I../build/emscripten-deps/SDL2/include
CXXFLAGS := $(includes) -std=c++1y -Wall -pipe -ffast-math -fno-rtti -fno-exceptions\
 -s USE_SDL=0 -O2 -g -fno-stack-protector -U_FORTIFY_SOURCE -fomit-frame-pointer

all: $(output) ../build/internal.zip

$(output): $(objects)
	$(CXX) $(CXXFLAGS) $(objects) -o $@

../build/internal.zip: ../build/embed_data
	zip -j -r $@ $<

$(builddir)/%.o: %.cpp $(headers)
	$(CXX) $(CXXFLAGS) -c $< -o $@

clean:
	rm -f ../build/internal.zip $(objects) $(output) *~

.PHONY: all clean
